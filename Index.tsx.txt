import { useState, useEffect } from 'react';
import { mockPosts, Post } from '@/lib/mockData';
import PostCard from '@/components/PostCard';
import Navigation from '@/components/Navigation';
import { Button } from '@/components/ui/button';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Heart, MessageSquare } from 'lucide-react';

export default function Index() {
  const [posts, setPosts] = useState<Post[]>(mockPosts);
  const [loading, setLoading] = useState(false);

  const handleLike = (postId: string) => {
    setPosts(prevPosts =>
      prevPosts.map(post =>
        post.id === postId
          ? {
              ...post,
              isLiked: !post.isLiked,
              likes: post.isLiked ? post.likes - 1 : post.likes + 1
            }
          : post
      )
    );
  };

  const handleComment = (postId: string) => {
    // In a real app, this would open a comment modal or navigate to a comment page
    console.log('Comment on post:', postId);
  };

  const loadMorePosts = () => {
    setLoading(true);
    // Simulate loading more posts
    setTimeout(() => {
      setLoading(false);
    }, 1000);
  };

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-950 pb-20">
      {/* Header */}
      <header className="bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-800 sticky top-0 z-40">
        <div className="max-w-md mx-auto px-4 py-3">
          <div className="flex items-center justify-between">
            <h1 className="text-2xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
              TAILE
            </h1>
            <div className="flex items-center space-x-4">
              <Button variant="ghost" size="icon" className="relative">
                <Heart className="h-6 w-6" />
                <span className="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">
                  3
                </span>
              </Button>
              <Button variant="ghost" size="icon" className="relative">
                <MessageSquare className="h-6 w-6" />
                <span className="absolute -top-1 -right-1 bg-blue-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">
                  7
                </span>
              </Button>
            </div>
          </div>
        </div>
      </header>

      {/* Stories Section */}
      <div className="bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-800 py-4">
        <div className="max-w-md mx-auto px-4">
          <div className="flex space-x-4 overflow-x-auto scrollbar-hide">
            <div className="flex flex-col items-center space-y-1 flex-shrink-0">
              <div className="w-16 h-16 rounded-full bg-gradient-to-tr from-yellow-400 to-pink-500 p-0.5">
                <div className="w-full h-full rounded-full bg-white dark:bg-gray-900 flex items-center justify-center">
                  <span className="text-2xl">+</span>
                </div>
              </div>
              <span className="text-xs text-gray-600 dark:text-gray-400">Your story</span>
            </div>
            
            {mockPosts.slice(0, 6).map((post) => (
              <div key={post.id} className="flex flex-col items-center space-y-1 flex-shrink-0">
                <div className="w-16 h-16 rounded-full bg-gradient-to-tr from-purple-500 to-pink-500 p-0.5">
                  <Avatar className="w-full h-full border-2 border-white dark:border-gray-900">
                    <AvatarImage src={post.user.avatar} alt={post.user.username} />
                    <AvatarFallback>{post.user.displayName[0]}</AvatarFallback>
                  </Avatar>
                </div>
                <span className="text-xs text-gray-600 dark:text-gray-400 max-w-[60px] truncate">
                  {post.user.username}
                </span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Posts Feed */}
      <div className="max-w-md mx-auto px-4 py-4">
        <div className="space-y-6">
          {posts.map((post) => (
            <PostCard
              key={post.id}
              post={post}
              onLike={handleLike}
              onComment={handleComment}
            />
          ))}
        </div>

        {/* Load More Button */}
        <div className="text-center mt-8">
          <Button
            variant="outline"
            onClick={loadMorePosts}
            disabled={loading}
            className="w-full"
          >
            {loading ? 'Loading...' : 'Load More Posts'}
          </Button>
        </div>
      </div>

      <Navigation />
    </div>
  );
}